[
  {
    "objectID": "aboutme.html",
    "href": "aboutme.html",
    "title": "About me",
    "section": "",
    "text": "Add some text and a figure describing myself."
  },
  {
    "objectID": "visualization_exercise.html",
    "href": "visualization_exercise.html",
    "title": "Visualization Exercise",
    "section": "",
    "text": "Placeholder file for the future visualization exercise."
  },
  {
    "objectID": "coding_exercise.html",
    "href": "coding_exercise.html",
    "title": "R Coding Exercise",
    "section": "",
    "text": "Install the dslabs package to look at and play with some data\ninstall.packages(“dslabs”)\nlibrary(“dslabs”)\n\n\nLoading tidyverse for data processing\ninstall.packages(“tidyverse”\nlibrary(“tidyverse”)\n\n\nLets look at the gapminder dataset from dslabs by using the help() function\n\nNote: the help() function is used to pull the help page for the data to see what it contains\n\nhelp(gapminder)\n\n\nNow lets use the str(), summary() and class() functions to further look at this data\n\nNote: The class function is used to check what time of object gapminder is\n\nstr(gapminder)\nsummary(gapminder)\nclass(gapminder)\n\n\nAssigning gapminder dataframe to a new object called gapminder\n\nNote: By setting gapminder as an object using the code blow, you will see gapminder show up in the environment window of RStudio which will allow easier viewing of the dataset\n\ngapminder <- gapminder\n\n\nWrite code that assigns only the African countries to a new object/variable\n\nNote: We only want African countries so use the code below to create a new object called africadata which should have 2907 observations (obs) and 9 variables\n\nafricadata <- dplyr::filter(gapminder, continent %in% c(“Africa”))\n\n\nRunning summary on africadata\nsummary(africadata)\n\n\nCreating an object that contains only the infant mortality and life expectancy data\n\nNote: To do that I will remove every column or variable that is not infant mortality or life expectancy\nNote: The -c in the code blow, indicates columns being dropped #\nNote: Brackets [] are used to indicate the position of items in the dataframe\nNote: Left of the comma indicates the rows and right of the comma indicated columns\n\ninfant_mortality_and_life_expectancy <- africadata[,-c(1:2,5:9)]\n\n\nSummary of infant_mortality_and_life_expectancy object created\nsummary(infant_mortality_and_life_expectancy) str(infant_mortality_and_life_expectancy)\n\n\nCreating an object that contains only population and life expectancy data\n\nNote: See the code below is identical to the code used to create the infant_mortality_and_life_expectancy object, but the code below has a different object name and different columns are being extracted to produce a dataset with just population and life expectancy\n\npopulation_and_life_expectancy <- africadata[,-c(1:3,5,7:9)]\n\n\nSummary of population_and_life_expectancy\nsummary(population_and_life_expectancy) str(population_and_life_expectancy)\n\n\nGenerating plot for life expectancy as a function of infant mortality\nlife_infant_plot <- infant_mortality_and_life_expectancy %>%\nggplot(aes(x=infant_mortality, y=life_expectancy)) + geom_point() + geom_smooth(method=‘lm’)\nplot(life_infant_plot) figure_file =\nhere(“coding_excercise_figures”,“life_infant_plot.png”)\nggsave(filename = figure_file, plot=life_infant_plot)\n\n\nGenerating plot for life expectancy as a function of population size\nlife_population_plot <- population_and_life_expectancy %>% ggplot(aes(x=population, y=life_expectancy)) + geom_point() + geom_smooth(method=‘lm’) plot(life_infant_plot)\nNote: adding a log scale for population using scale_x_log10()\nlife_population_plot + scale_x_log10() #saving plot to “coding_excercise_figures” file figure_file = here(“coding_excercise_figures”,“life_population_plot.png”) ggsave(filename = figure_file, plot=life_population_plot)\n\n\nExtracting only the year 2000\nYear_2000 <- africadata[africadata$year == ‘2000’,]\nGenerating object for infant mortality and life expectancy during the year 2000\ninfant_mortality_and_life_expectancy_2000 <- Year_2000[,-c(1:2,5:9)]\nSummary of infant_mortality_and_life_expectancy\nsummary(infant_mortality_and_life_expectancy_2000) str(infant_mortality_and_life_expectancy_2000)\n\n\nCreating an object that contains only population and life expectancy data\npopulation_and_life_expectancy_2000 <- Year_2000[,-c(1:3,5,7:9)]\nSummary of population_and_life_expectancy\nsummary(population_and_life_expectancy_2000) str(population_and_life_expectancy_2000)\n\n\nPlots for life expectancy as a function of infant mortality and life expectancy as a function of population size but only for the year 2000\nlife_infant_2000_plot <- infant_mortality_and_life_expectancy_2000 %>% ggplot(aes(x=infant_mortality, y=life_expectancy)) + geom_point() + geom_smooth(method=‘lm’) plot(life_infant_plot) figure_file = here(“coding_excercise_figures”,“life_infant_2000_plot.png”) ggsave(filename = figure_file, plot=life_infant_2000_plot)\nGenerating plot for life expectancy as a function of population size\nlife_population_2000_plot <- population_and_life_expectancy_2000 %>% ggplot(aes(x=population, y=life_expectancy)) + geom_point() + geom_smooth(method=‘lm’) plot(life_population_2000_plot) #adding a log scale for population life_population_2000_plot + scale_x_log10() #saving plot to “coding_excercise_figures” file figure_file = here(“coding_excercise_figures”,“life_population_2000_plot.png”) ggsave(filename = figure_file, plot=life_population_2000_plot)\nUsing the lm() function to fit life expectancy as outcome and infant mortality as the predictor. Then using the lm() function to fit life expectancy as outcome and population as the predictor\nfit1 <- lm(life_expectancy ~ infant_mortality, data=infant_mortality_and_life_expectancy_2000)\nfit2 <- lm(life_expectancy ~ population, data=population_and_life_expectancy_2000)\n\n\nApplying the summary command to both fits which will print various fit results\nsummary(fit1)\nsummary(fit2)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My website and data analysis portfolio",
    "section": "",
    "text": "Hello\n\nAnd hello again\nWelcome to Jacob Matta’s website and data analysis portfolio.\n\nPlease use the Menu Bar above to look around.\nHave fun!"
  },
  {
    "objectID": "aboutme.html#background",
    "href": "aboutme.html#background",
    "title": "About me",
    "section": "Background",
    "text": "Background\nI am Jacob Matta, a first-year Master of Public Health (MPH) student with a concentration in Biostatistics. I completed my undergraduate degree in Biochemistry and Molecular Biology from the University of Georgia (UGA) during the spring of 2021. I currently work as a Graduate Research Assistant (GRA) in the Economic Evaluation Research Group in the Health Policy and Management Department at UGA."
  },
  {
    "objectID": "aboutme.html#research-interests",
    "href": "aboutme.html#research-interests",
    "title": "About me",
    "section": "Research Interests",
    "text": "Research Interests\nI am interested in engaging in patient-centered research and using quantitative methods to develop clinical outcomes assessments."
  },
  {
    "objectID": "aboutme.html#statistics-programming-and-data-analysis-experience",
    "href": "aboutme.html#statistics-programming-and-data-analysis-experience",
    "title": "About me",
    "section": "Statistics, Programming and Data Analysis Experience",
    "text": "Statistics, Programming and Data Analysis Experience\nLast semester I was introduced to Stata, SAS and R through coursework where I learned basic statistics testing and analysis. As a GRA, I used R Studio and Stata to conduct secondary data analyses of data released by Georgia Department of Public Health."
  },
  {
    "objectID": "aboutme.html#goals-for-mada",
    "href": "aboutme.html#goals-for-mada",
    "title": "About me",
    "section": "Goals for MADA",
    "text": "Goals for MADA\nI am hoping this course helps me develop my skills and understanding of R Studio. Specifically, I would like to build efficient strategies to obtain and clean data, run an appropriate analysis, and then be able to communicate the findings to an audience. In addition, I am eager to learn about programming, machine learning, and other modern approaches to data analysis that are the future."
  },
  {
    "objectID": "aboutme.html#fun-fact",
    "href": "aboutme.html#fun-fact",
    "title": "About me",
    "section": "Fun Fact",
    "text": "Fun Fact\nPrevious to starting the MPH program I was set on attending veterinary school and becoming a veterinarian that specializes in public health. After a semester, my career interest has become more focused to humans but remains in the field of public health."
  },
  {
    "objectID": "aboutme.html#something-to-share",
    "href": "aboutme.html#something-to-share",
    "title": "About me",
    "section": "Something to Share",
    "text": "Something to Share\nhttps://open.spotify.com/episode/5LHMx6BmuaOpLyEOp49Rpy?si=3c45b75711614e6e\nI would like to share a link to an episode of The Peter Attia Drive Podcast, in which the host, Peter Attia, discusses neurodegenerative diseases with a neurologist. At the 1 hour and 24 minute mark of the episode, Peter and his guest discuss that early screenings for hearing loss are important because they believe that hearing loss contributes to nuerodegenerative diseases like Alzheimer’s Disease. If Peter Attia and his guest are correct, then accurate screening strategies are needed to test for hearing loss at earlier stages of life in order to improve prevention of neurodegenerative diseases. This will require new and improved data analysis methods to interpret data correctly and efficiently."
  },
  {
    "objectID": "tidytuesday_exercise.html",
    "href": "tidytuesday_exercise.html",
    "title": "Tidy Tuesday Exercise",
    "section": "",
    "text": "Placeholder file for the future Tidy Tuesday exercise."
  }
]